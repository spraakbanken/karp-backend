[tool.poetry]
name = "karp-backend"
version = "6.0.20"
license = "MIT"
description = "Karp backend"
readme = "README.md"
authors = [
	"Spr√•kbanken at the University of Gothenburg <sb-info@svenska.gu.se>",
]
homepage = "https://spraakbanken.gu.se"

documentation = "https://github.com/spraakbanken/karp-backend"
repository = "https://github.com/spraakbanken/karp-backend"
classifiers = [
	"Development Status :: 4 - Beta",
	"Intended Audience :: Developers",
	"License :: OSI Approved :: MIT License",
	"Operating System :: Unix",
	"Operating System :: POSIX",
	"Operating System :: Microsoft :: Windows",
	"Topic :: Utilities",
]
packages = [{ include = "karp" }]

[tool.poetry.scripts]
karp-cli = "karp.cliapp.main:cliapp"
# ; karp.modules =
# ;     health = "karp.webapp.health"_api
# ;     entries = "karp.webapp.views.entries"
# ;     resources = "karp.webapp.resources"_api
# ; 	history = "karp.webapp.views.history"
# ; 	stats = "karp.webapp.stats"_api
# ; 	query = "karp.webapp.query"_api
[tool.poetry.plugins."karp.infrastructure"]
"es6" = "karp.infrastructure.elasticsearch6"
"sql" = "karp.infrastructure.sql"
"testing" = "karp.infrastructure.testing"
"jwt" = "karp.infrastructure.jwt"

# [tool.poetry.plugins."karp.clicommands"]
# "db" = "karp.cliapp.subapp_database"
# "entries" = "karp.cliapp.subapp_entries"
# "entry_repo" = "karp.cliapp.subapp_entry_repo"
# "resource" = "karp.cliapp.subapp_resource"
# "query" = "karp.cliapp.subapps.query_subapp"

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/spraakbanken/karp-backend/issues"

[tool.poetry.dependencies]
python = "^3.10"
json-streams = "^0.12.0"
paradigmextract = "^0.1.1"
pydantic = "^1.10.2"
PyJWT = {version = "^2.4.0", extras = ["crypto"]}
sb-json-tools = "^0.9.1"
SQLAlchemy = "^1.4.25"
sqlalchemy-json = "^0.5.0"
SQLAlchemy-Utils = "^0.38.3"
tabulate = "^0.8.10"
tenacity = "^8.0.1"
tqdm = "^4.62.3"
typer = "^0.6.1"
urllib3 = "^1.26.7"
fastapi = "^0.82.0"
injector = "^0.20.1"
alembic = "^1.8.1"
regex = "^2022.8.17"
python-dotenv = "^0.19.0"
environs = "^9.3.4"
elasticsearch = "^6"
elasticsearch-dsl = "^6"
mysqlclient = {version = "^2.1.1", optional = true}
TatSu = "^5.8.3"
PyMySQL = {version = "^1.0.2", optional = true}
aiosqlite = {version = "^0.17.0", optional = true}
aiomysql = {version = "^0.1.1", optional = true}
asgi-correlation-id = "^3.0.1"
python-json-logger = "^2.0.4"
ulid-py = "^1.1.0"
Deprecated = "^1.2.13"

[tool.poetry.extras]
mysql = ["mysqlclient", "PyMySQL", "aiomysql"]
sqlite = ["aiosqlite"]

[tool.poetry.group.dev.dependencies]
uvicorn = "^0.18.3"
pytest = "^7.1.3"
pytest-cov = "^3.0.0"
mypy = "^0.971"
bump2version = "^1.0.1"
factory-boy = "^3.2.1"
isort = "^5.10.1"
cryptography = "^38.0.1"
types-tabulate = "^0.8.11"
vulture = "^2.5"
pylint = "^2.15.2"
black = "^22.8.0"
elasticsearch-test-py = "^1.1.0"
requests = "^2.28.1"

[tool.flakehell]
exclude = ["README.rst", "README.md"]
# format = "colored"
show_source = true
# whitelist = "../../allowlist.txt"
format = "grouped"
statistics = false
doctests = true
enable_extensions = "G"


accept_encodings = "utf-8"
max_complexity = 6
max_line_length = 88

ignore = "D100, D104, D401, W504, RST303, RST304, DAR103, DAR203"

extended_default_ignore = []

[tool.flakehell.exceptions."*/__init__.py"]
pycodestyle = ["-F401"]
pyflakes = ["-F401"]

[tool.flakehell.exceptions."karp/tests/*"]
pycodestyle = ["-D10*"]
pyflakes = ["-D10*"]
flake8-docstrings = ["-D10*"]

[tool.flakehell.plugins]
flake8-bandit = ["+*", "-S322"]
flake8-bugbear = ["+*"]
flake8-builtins = ["+*"]
flake8-comprehensions = ["+*"]
flake8-darglint = ["+*"]
flake8-docstrings = ["+*"]
flake8-eradicate = ["+*"]
flake8-isort = ["+*"]
flake8-mutable = ["+*"]
flake8-pytest-style = ["+*"]
flake8-spellcheck = ["+*"]
mccabe = ["+*"]
pep8-naming = ["+*"]
pycodestyle = ["+*"]
pyflakes = ["+*"]
pylint = ["+*"]
"wemake-python-styleguide" = ["+*", "-WPS306"]

[tool.vulture]
exclude = ["karp/tests/"]
min_confidence = 100
paths = ["karp"]
ignore_decorators = ["@abc.abstractmethod"]
