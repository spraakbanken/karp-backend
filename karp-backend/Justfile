
alias dev := install-dev

INVENV := if env_var_or_default('VIRTUAL_ENV', "") == "" { "poetry run" } else { "" }

# setup development environment
install-dev:
	poetry install --extras mysql

# setup CI environment
install-ci: install-dev
	poetry install --only ci --extras mysql

default-cov := "--cov=src/karp"
cov-report := "term-missing"

# run tests with code coverage
test-w-coverage cov=default-cov +tests="src/karp/tests": clean-pyc
	{{INVENV}} pytest -vv {{cov}} --cov-report={{cov-report}} {{tests}}

unit-test-dirs := "karp-backend/src/karp/tests/unit karp-lex-core/src/karp/lex_core/tests"

# run given test(s)
test *tests="src/karp/tests/unit":
	{{INVENV}} pytest -vv {{tests}}

# lint the code
lint *flags="":
    {{INVENV}} ruff {{flags}} src

# type-check the code
type-check:
    {{INVENV}} mypy --config-file mypy.ini -p karp

# run formatter
fmt:
	{{INVENV}} black .

# test if code is formatted
check-fmt:
	{{INVENV}} black . --check

# build the project
build:
    poetry build

# bump given part of version
bumpversion part="patch":
	{{INVENV}} bump2version {{part}}

clean: clean-pyc
clean-pyc:
	find . -name '*.pyc' -exec rm -f {} +
	find . -name '*.pyo' -exec rm -f {} +
	find . -name '*~' -exec rm -f {} +
	find . -name '__pycache__' -exec rm -fr {} +

