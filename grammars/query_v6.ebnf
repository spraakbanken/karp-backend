@@grammar::KarpQueryV6

start
    =
    expression $
    ;

expression
    =
    | logical_expression
    | query_expression
    | sub_query
    ;

query_expression
    =
    | contains
    | endswith
    | equals
    | exists
    | freetext
    | gt
    | gte
    | lt
    | lte
    | missing
    | regexp
    | startswith
    ;

logical_expression
    =
    | and
    | or
    | not
    ;

sub_query::SubQuery
    =
    field:identifier '(' exp:expression ')'
    ;

and::And
    =
    'and' '(' @:'||'.{expression}+ ')'
    ;

contains::Contains
    =
    'contains' '|' field:identifier '|' arg:string_value
    ;

endswith::Endswith
    =
    'endswith' '|' field:identifier '|' arg:string_value
    ;

equals::Equals
    =
    'equals' '|' field:identifier '|' arg:any_value
    ;

exists::Exists
    =
    'exists' '|' field:identifier
    ;

freergxp::Freergxp
    =
    'freergxp' '|' arg:string_value
    ;

freetext::Freetext
    =
    'freetext' '|' arg:string_value
    ;

gt::Gt
    =
    op:'gt' '|' field:identifier '|' arg:any_value
    ;

gte::Gte
    =
    op:'gte' '|' field:identifier '|' arg:any_value
    ;

lt::Lt
    =
    op:'lt' '|' field:identifier '|' arg:any_value
    ;

lte::Lte
    =
    op:'lte' '|' field:identifier '|' arg:any_value
    ;

missing::Missing
    =
    'missing' '|' field:identifier
    ;

not::Not
    =
    'not' '(' @:'||'.{expression}+ ')'
    ;

or::Or
    =
    'or' '(' @:'||'.{expression}+ ')'
    ;

regexp::Regexp
    =
    'regexp' '|' field:identifier '|' arg:string_value
    ;

startswith::Startswith
    =
    'startswith' '|' field:identifier '|' arg:string_value
    ;

any_value
    =
    | integer_value
    | string_value
    ;

string_value::StringValue =
    | unquoted_string_value
    | quoted_string_value
    ;

unquoted_string_value = @: /[^|)("]+/ ;

# any character should be allowed in strings, but " must be escaped
quoted_string_value::QuotedStringValue
    =
    '"' @: { /(?s)\s+/ | '\\"' | /[^"]/  } '"'
    ;

integer_value::int
    =
    /\d+/
    ;

# for simplicity, add |,(,) as not allowed here, even though it shouldn't matter. should be possible to name  field "myfield|"
identifier::Identifier = /[^|)(]+/ ;